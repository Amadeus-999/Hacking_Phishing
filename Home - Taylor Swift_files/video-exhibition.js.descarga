(function ($) {
    "use strict";

    window.UMGGR_Video_Shortcode = window.UMGGR_Video_Shortcode || []

    UMGGR_Video_Shortcode.players = [];
    UMGGR_Video_Shortcode.setplayer = {
        initYtVideo: function (container, videoId) {

            if (typeof (YT) == 'undefined' || typeof (YT.Player) == 'undefined') {
                window.onYouTubeIframeAPIReady = function () {
                    UMGGR_Video_Shortcode.set = true;
                    UMGGR_Video_Shortcode.setplayer.setVideoPlayer(container, videoId);
                };

                $.getScript('//www.youtube.com/iframe_api', function(){
                    if (UMGGR_Video_Shortcode.set == false){
                        UMGGR_Video_Shortcode.set = true;
                        UMGGR_Video_Shortcode.setplayer.setVideoPlayer(container, videoId);
                    }
                });
            } else
            {
                UMGGR_Video_Shortcode.setplayer.setVideoPlayer(container, videoId);
            }
        },

        setVideoPlayer: function (container, videoId) {
            var ytplayer = new YT.Player(container, {
                videoId: videoId,
                host: UMGGR_Video_Shortcode.ytPlayerHost,
                //width: 356,
                //height: 200,
            });
            var ytplayerContainer = {player: ytplayer, container: container}
            UMGGR_Video_Shortcode.players.push(ytplayerContainer);
        }
    };

    $(document).ready(function ()
    {

        //Load more news
        $('a[data-video-load-more]').on('click', function(e) {
            e.preventDefault();
            
            var loadMoreAnchor = $(this);

            var currentOffset = $(this).attr('data-offset');
            var perPage = $(this).attr('data-load-num');

            var tileTemplate = $('.c-exhibition__video__item:last').clone();

            //add loading icon to the button
            $(loadMoreAnchor).addClass('-is-loading');

            let posts = {};
            $.ajax({
                type: "GET",
                url: UMGGR_Video_Shortcode.wpjsonurl + '/wp/v2/umggr-video',
                data: {
                    'per_page' : perPage,
                    'offset': currentOffset
                },
                success: function (response) {
                    posts = response;
                },
            }).then( ( posts ) => {

                if(typeof posts !== 'undefined' && posts.length) {
                    //loop through retrived posts and render using tile template
                    for(var i in posts) {
                        var post = posts[i];

                        var tile = tileTemplate.clone().attr('data-post-id', post.id).hide();

                        //update link taking into account the click-action
                        if (UMGGR_Video_Shortcode.clickAction === 'post') {
                            tile.find('.item-image a').attr('href', post.link);
                        } else {
                            var tmpYTURL = replaceUrlParam(tile.find('a').attr('href'), 'v', post['umggr-youtube-id']);
                            tile.find('.item-image a').attr('href', tmpYTURL);
                        }
                        
                        //update title
                        tile.find('.item-content .item-title h3.title').html(post.title.rendered);

                        //update the image
                        tile.find('.image-container div.image').css('background-image', "url('"+post['umggr-video-thumb']+"')");

                        //update the aria-label
                        var ariaLabel = "";
                        if (post['umggr-video-alt-text'] == ''){
                            ariaLabel = post.title.rendered;
                        } else {
                            ariaLabel = post['umggr-video-alt-text'];
                        }                    

                        tile.find('.image-container div.image').attr('aria-label', ariaLabel);

                        //update the description
                        tile.find('.item-content .item-description .description').empty().html(post['umggr-video-description']);

                        //update the date
                        tile.find('.item-content .item-date').empty().html(relative_time(post['umggr-video-date']));

                        //add new tile before the Load More button
                        $('.c-exhibition__video__inner').append(tile);

                        //remove loading icon from the button
                        $(loadMoreAnchor).removeClass('-is-loading');

                        $('div[data-post-id="' + post.id + '"]').fadeIn();
                    }
                } else {
                    //no posts left
                }

                return posts;

            });

            //calculate new offset
            var newOffset = parseInt(currentOffset) + parseInt(perPage);

            //check if there are any more posts, if not then hide the load more button
            posts = {};
            $.ajax({
                type: "GET",
                url: UMGGR_Video_Shortcode.wpjsonurl + '/wp/v2/umggr-video',
                data: {
                    'per_page' : perPage,
                    'offset': newOffset
                },
                success: function (response) {
                    posts = response;
                },
            }).then( ( posts ) => {
                if(typeof posts === 'undefined' || posts.length === 0) {
                    loadMoreAnchor.hide();
                } else {
                    loadMoreAnchor.attr('data-offset', parseInt(currentOffset) + parseInt(perPage));
                }
            });
            
            return false;
        });


        //Video gallery rollovers
        $('html').on('mouseenter', '.fancybox-video-overlay:not(.-always)', function () {
            TweenMax.to($(this).find('div.image'), 0.3, {scale: 1.2});
            TweenMax.to($(this).find('.slide-overlay'), 0.3, {opacity: 0.8});
            TweenMax.fromTo($(this).find('.icon'), 0.3, {rotation: -20}, {rotation: 0});
        });
        $('html').on('mouseleave', '.fancybox-video-overlay:not(.-always)', function () {
            TweenMax.to($(this).find('div.image'), 0.3, {scale: 1});
            TweenMax.to($(this).find('.slide-overlay'), 0.3, {opacity: 0});
            TweenMax.to($(this).find('.icon'), 0.3, {rotation: -20});
        });

        if ($('#umggr-featured-video').length && $('#umggr-featured-video').data('yt-id')) {
            UMGGR_Video_Shortcode.setplayer.initYtVideo('umggr-featured-video', $('#umggr-featured-video').data('yt-id'));
        }
    });
    $(window).load(function () {
        //Fancybox video lightbox
        $('[data-fancybox]').fancybox({
            baseClass: "fancy-video",
            media : {
              youtube : {
                url: "//www.youtube-nocookie.com/embed/$4"
              }
            }
        });
    });

    function relative_time(date_str) {
        if (!date_str) {return;}
        date_str = $.trim(date_str);
        date_str = date_str.replace(/\.\d\d\d+/,""); // remove the milliseconds
        date_str = date_str.replace(/-/,"/").replace(/-/,"/"); //substitute - with /
        date_str = date_str.replace(/T/," ").replace(/Z/," UTC"); //remove T and substitute Z with UTC
        date_str = date_str.replace(/([\+\-]\d\d)\:?(\d\d)/," $1$2"); // +08:00 -> +0800
        var parsed_date = new Date(date_str);
        var relative_to = (arguments.length > 1) ? arguments[1] : new Date(); //defines relative to what ..default is now
        var delta = parseInt((relative_to.getTime()-parsed_date)/1000);
        delta=(delta<2)?2:delta;
        
        var sec = delta;
        // Convert time difference in minutes
        var min = Math.round(delta / 60 );
        // Convert time difference in hours
        var hrs = Math.round(delta / 3600);
        // Convert time difference in days
        var days = Math.round(delta / 86400 );
        // Convert time difference in weeks
        var weeks = Math.round(delta / 604800);
        // Convert time difference in months
        var mnths = Math.round(delta / 2600640 );
        // Convert time difference in years
        var yrs = Math.round(delta / 31207680 );

        // Check for seconds
        if (sec <= 60) {
            return sec + " seconds ago";
        }// Check for minutes
        else if (min <= 60) {
            if (min == 1) {
                return "one minute ago";
            } else {
                return min + " minutes ago";
            }
        }// Check for hours
        else if (hrs <= 24) {
            if (hrs == 1) {
                return "an hour ago";
            } else {
                return hrs + " hours ago";
            }
        }// Check for days
        else if (days <= 7) {
            if (days == 1) {
                return "Yesterday";
            } else {
                return days + " days ago";
            }
        }
        // Check for weeks
        else if (weeks <= 4.3) {
            if (weeks == 1) {
                return "a week ago";
            } else {
                return weeks + " weeks ago";
            }
        }
        // Check for months
        else if (mnths <= 12) {
            if (mnths == 1) {
                return "a month ago";
            } else {
                return mnths + " months ago";
            }
        }
        // Check for years
        else {
            if (yrs == 1) {
                return "one year ago";
            } else {
                return yrs + " years ago";
            }
        }
    };

    function replaceUrlParam(url, paramName, paramValue)
    {
        if (paramValue == null) {
            paramValue = '';
        }
        var pattern = new RegExp('\\b('+paramName+'=).*?(&|#|$)');
        if (url.search(pattern)>=0) {
            return url.replace(pattern,'$1' + paramValue + '$2');
        }
        url = url.replace(/[?#]$/,'');
        return url + (url.indexOf('?')>0 ? '&' : '?') + paramName + '=' + paramValue;
    }

})(jQuery);// JavaScript Document
